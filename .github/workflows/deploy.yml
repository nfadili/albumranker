name: Deploy
on:
    push:
        branches:
            - main
    pull_request: {}

jobs:
    lint:
        name: Lint
        runs-on: ubuntu-latest
        steps:
            - name: Cancel Previous Runs
              uses: styfle/cancel-workflow-action@0.9.1

            - name: Checkout repo
              uses: actions/checkout@v3

            - name: Setup node
              uses: actions/setup-node@v3
              with:
                  node-version: 16

            - name: Download deps
              uses: bahmutov/npm-install@v1

            - name: Lint
              run: npm run lint

    typecheck:
        name: TypeScript
        runs-on: ubuntu-latest
        steps:
            - name: Cancel Previous Runs
              uses: styfle/cancel-workflow-action@0.9.1

            - name: Checkout repo
              uses: actions/checkout@v3

            - name: Setup node
              uses: actions/setup-node@v3
              with:
                  node-version: 16

            - name: Download deps
              uses: bahmutov/npm-install@v1

            - name: Generate prisma client
              run: npm run db:generate

            - name: Type check
              run: npm run typecheck --if-present
    deploy:
        name: Deploy
        if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        needs: [lint, typecheck]
        runs-on: ubuntu-latest
        steps:
            # Setup
            - name: Checkout master
              uses: actions/checkout@main

            - name: Install doctl
              uses: digitalocean/action-doctl@v2
              with:
                  token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

            # Build a Docker image of the application and tag it with the $GITHUB_SHA.
            - name: Build container image
              run: docker build -t ${{ secrets.REGISTRY_NAME }}/albumranker:$(echo $GITHUB_SHA | head -c7) .

            - name: Log in to DigitalOcean Container Registry with short-lived credentials
              run: doctl registry login --expiry-seconds 1200

            - name: Push image to DigitalOcean Container Registry
              run: docker push ${{ secrets.REGISTRY_NAME }}/albumranker:$(echo $GITHUB_SHA | head -c7)

            # Deploy and verify
            - name: Update deployment file
              run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<__IMAGE__>|${{ secrets.REGISTRY_NAME }}/albumranker:'${TAG}'|' $GITHUB_WORKSPACE/k8s/deployment.yaml

            - name: Save DigitalOcean kubeconfig with short-lived credentials
              run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}

            - name: Deploy to DigitalOcean Kubernetes
              run: kubectl apply -f $GITHUB_WORKSPACE/k8s/deployment.yaml

            - name: Verify deployment
              run: kubectl rollout status deployment/albumranker
